import{_ as l,c as a,a as t,d as s,e as i,b as r,o,r as d}from"./app-DUTS4eZY.js";const p={},g={href:"https://www.cnblogs.com/China-Dream/p/16476775.html",target:"_blank",rel:"noopener noreferrer"},c={href:"https://so.csdn.net/so/search?q=GitHub&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"};function h(u,e){const n=d("ExternalLinkIcon");return o(),a("div",null,[e[9]||(e[9]=t("h1",{id:"git-代理设置方法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#git-代理设置方法"},[t("span",null,"Git 代理设置方法")])],-1)),e[10]||(e[10]=t("hr",null,null,-1)),t("ul",null,[e[1]||(e[1]=t("li",null,"Git 代理设置方法 - 余以为",-1)),t("li",null,[t("a",g,[e[0]||(e[0]=s("https://www.cnblogs.com/China-Dream/p/16476775.html")),i(n)])]),e[2]||(e[2]=t("li",null,"国内git clone一个GitHub上的仓库太慢，经常连接失败。下面是解决办法。 一、代理设置 1、全局代理设置 git config --global http.proxy http://127.0.0.1:1080 git config --global https.proxy https:/",-1)),e[3]||(e[3]=t("li",null,"2024-06-02 11:48:38",-1))]),e[11]||(e[11]=t("hr",null,null,-1)),t("p",null,[e[5]||(e[5]=s("国内")),e[6]||(e[6]=t("code",null,"git clone",-1)),e[7]||(e[7]=s("​一个")),t("a",c,[e[4]||(e[4]=s("GitHub")),i(n)]),e[8]||(e[8]=s("上的仓库太慢，经常连接失败。下面是解决办法。"))]),e[12]||(e[12]=r(`<h2 id="一、代理设置" tabindex="-1"><a class="header-anchor" href="#一、代理设置"><span>一、代理设置</span></a></h2><h3 id="_1、全局代理设置" tabindex="-1"><a class="header-anchor" href="#_1、全局代理设置"><span>1、全局代理设置</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --global http.proxy http://127.0.0.1:1080</span>
<span class="line">git config --global https.proxy https://127.0.0.1:1080</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里可以打开SS查看代理设置，查看自己的端口是否为1080，不是的改为对应的端口。</p><h3 id="_2、只对github进行代理" tabindex="-1"><a class="header-anchor" href="#_2、只对github进行代理"><span>2、只对GitHub进行代理</span></a></h3><p>如果挂了全局代理，克隆coding之类的国内仓库会变慢，所以我建议使用如下命令，只对GitHub进行代理，对国内的仓库不影响。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --global http.https://github.com.proxy https://127.0.0.1:1080</span>
<span class="line">git config --global https.https://github.com.proxy https://127.0.0.1:1080</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果在输入这条命令之前，已经输入全局代理的话，可以按照二、取消代理的方法进行取消。</p><p>注意：以上两点都是对https协议进行代理设置，也就是仅对<code>git clone https://www.github.com/xxxx/xxxx.git</code>​这种命令有效。对于SSH协议，也就是<code>git clone git@github.com:xxxxxx/xxxxxx.git</code>​这种，依旧是无效的。</p><h3 id="_3、sock5代理设置" tabindex="-1"><a class="header-anchor" href="#_3、sock5代理设置"><span>3、sock5代理设置</span></a></h3><p>之前说的是http代理，有人反映ss暴露的是socks5。下面附上socks5代理的方法。</p><p>1、首先查看自己socks5的端口号，假设为：127.0.0.1:1086</p><p>2、输入以下命令：</p><div class="language-c++ line-numbers-mode" data-highlighter="prismjs" data-ext="c++" data-title="c++"><pre><code><span class="line">git config --global https.https://github.com.proxy socks5://127.0.0.1:1086</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="二、取消代理" tabindex="-1"><a class="header-anchor" href="#二、取消代理"><span>二、取消代理</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --global --unset http.proxy</span>
<span class="line">git config --global --unset https.proxy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、查看已有配置" tabindex="-1"><a class="header-anchor" href="#三、查看已有配置"><span>三、查看已有配置</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --global -l</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,18))])}const b=l(p,[["render",h],["__file","git-proxy-setting-method-z1t1q8s.html.vue"]]),x=JSON.parse('{"path":"/docs/blogs/git-proxy-setting-method-z1t1q8s.html","title":"Git 代理设置方法","lang":"en-US","frontmatter":{"title":"Git 代理设置方法","short_title":"","date":"2024-06-02T03:48:38.000Z","article":true,"timeline":false,"isOriginal":true},"headers":[{"level":2,"title":"一、代理设置","slug":"一、代理设置","link":"#一、代理设置","children":[{"level":3,"title":"1、全局代理设置","slug":"_1、全局代理设置","link":"#_1、全局代理设置","children":[]},{"level":3,"title":"2、只对GitHub进行代理","slug":"_2、只对github进行代理","link":"#_2、只对github进行代理","children":[]},{"level":3,"title":"3、sock5代理设置","slug":"_3、sock5代理设置","link":"#_3、sock5代理设置","children":[]}]},{"level":2,"title":"二、取消代理","slug":"二、取消代理","link":"#二、取消代理","children":[]},{"level":2,"title":"三、查看已有配置","slug":"三、查看已有配置","link":"#三、查看已有配置","children":[]}],"git":{"createdTime":1732186424000,"updatedTime":1732186424000,"contributors":[{"name":"coriger","email":"461504978@qq.com","commits":1}]},"filePathRelative":"docs/blogs/git-proxy-setting-method-z1t1q8s.md"}');export{b as comp,x as data};
